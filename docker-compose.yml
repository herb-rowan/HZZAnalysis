version: "3.9"

services:
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"  # Default RabbitMQ port for AMQP
      - "15672:15672"  # Management UI port (optional)
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 10s
      retries: 5

  data-acquisition:
    build:
      context: .
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: guest
      RABBITMQ_PASS: guest
    volumes:
      - ./data:/app/data  # Ensure ./data contains all required files
    command: ["python", "data_acquisition.py"]

  mc-simulation:
    build:
      context: .
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: guest
      RABBITMQ_PASS: guest
    volumes:
      - ./data:/app/data
    command: ["python", "mc_simulation.py"]

  data-processing:
    build:
      context: .
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: guest
      RABBITMQ_PASS: guest
    volumes:
      - ./data:/app/data  # Map input data for processing
      - ./output:/app/output  # Ensure ./output exists
    command: ["python", "data_processing.py"]

  aggregation:
    build:
      context: .
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: guest
      RABBITMQ_PASS: guest
    volumes:
      - ./output:/app/output  # Ensure ./output exists
    command: ["python", "aggregation.py"]

  visualization:
    build:
      context: .
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: guest
      RABBITMQ_PASS: guest
    volumes:
      - ./output:/app/output  # Input from other services
      - ./visualizations:/app/visualizations  # Visualization output
    command: ["python", "visualization.py"]